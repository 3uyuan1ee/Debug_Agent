# AI Agent Configuration File

# Agent Settings
agent:
  name: "Debug Agent"
  version: "1.0.0"
  description: "AI-powered bug detection and auto-fix system"

  # Agent Behavior Settings
  behavior:
    auto_fix_enabled: true
    confidence_threshold: 0.7
    max_fix_attempts: 3
    safety_mode: true
    require_confirmation: true

  # Learning Settings
  learning:
    enabled: true
    learn_from_fixes: true
    feedback_collection: true
    pattern_recognition: true

  # Communication Settings
  communication:
    create_issues: true
    create_prs: true
    notify_on_fix: true
    detailed_reports: true

# Bug Detection Settings
bug_detection:
  # Types of bugs to detect
  types:
    - security
    - performance
    - logic
    - syntax
    - style
    - documentation
    - tests

  # Detection Methods
  methods:
    static_analysis:
      enabled: true
      tools:
        - bandit
        - flake8
        - pylint
        - safety
        - mypy

    dynamic_analysis:
      enabled: true
      tools:
        - pytest
        - unittest
        - integration_tests

    ai_analysis:
      enabled: true
      model: "gpt-4"
      temperature: 0.3
      max_tokens: 2000

  # Severity Levels
  severity:
    critical:
      auto_fix: true
      create_issue: true
      priority: "immediate"

    high:
      auto_fix: true
      create_issue: true
      priority: "high"

    medium:
      auto_fix: false
      create_issue: true
      priority: "medium"

    low:
      auto_fix: false
      create_issue: false
      priority: "low"

# Auto-Fix Settings
auto_fix:
  # Fix Strategies
  strategies:
    security:
      enabled: true
      patterns:
        - hardcoded_secrets
        - sql_injection
        - xss_vulnerability
        - input_validation

    performance:
      enabled: true
      patterns:
        - algorithm_optimization
        - memory_leaks
        - inefficient_loops
        - caching_opportunities

    syntax:
      enabled: true
      patterns:
        - import_formatting
        - missing_semicolons
        - bracket_mismatch
        - indentation

    logic:
      enabled: false  # Dangerous to auto-fix logic bugs
      patterns:
        - null_pointer
        - division_by_zero
        - infinite_loops
        - race_conditions

  # Fix Validation
  validation:
    compile_check: true
    test_suite: true
    lint_check: true
    security_scan: true

  # Rollback Settings
  rollback:
    enabled: true
    timeout: 300  # 5 minutes
    auto_rollback: true

# Integration Settings
integrations:
  # GitHub Integration
  github:
    enabled: true
    create_issues: true
    create_prs: true
    assign_issues: false
    label_issues: true
    issue_labels:
      - "ai-detected"
      - "bug"
      - "needs-review"
      - "auto-fix"

  # Slack Integration
  slack:
    enabled: false
    webhook_url: "${{ secrets.SLACK_WEBHOOK }}"
    channel: "#dev-alerts"
    notify_on:
      - critical_bugs
      - auto_fix_applied
      - deployment_failed

  # Email Integration
  email:
    enabled: false
    smtp_server: "${{ secrets.SMTP_SERVER }}"
    smtp_port: 587
    username: "${{ secrets.SMTP_USERNAME }}"
    password: "${{ secrets.SMTP_PASSWORD }}"
    recipients:
      - "dev-team@example.com"

# Reporting Settings
reporting:
  # Report Formats
  formats:
    - json
    - markdown
    - html
    - xml

  # Report Content
  content:
    executive_summary: true
    detailed_findings: true
    code_examples: true
    fix_suggestions: true
    risk_assessment: true

  # Schedule
  schedule:
    daily_report: true
    weekly_summary: true
    monthly_analysis: true

  # Distribution
  distribution:
    github_issues: true
    email_report: false
    slack_notification: false
    file_storage: true

# Monitoring and Metrics
monitoring:
  # Metrics to Track
  metrics:
    - bugs_detected
    - fixes_applied
    - success_rate
    - false_positive_rate
    - response_time
    - code_quality_score

  # Alerts
  alerts:
    high_error_rate:
      threshold: 0.1
      enabled: true

    low_success_rate:
      threshold: 0.7
      enabled: true

    performance_degradation:
      threshold: 0.2
      enabled: true

# Security Settings
security:
  # API Keys and Secrets
  api_keys:
    openai: "${{ secrets.OPENAI_API_KEY }}"
    github_token: "${{ secrets.GITHUB_TOKEN }}"

  # Access Control
  access_control:
    enabled: true
    allowed_users:
      - "admin"
      - "developers"
    restricted_operations:
      - "direct_database_access"
      - "system_configuration"

  # Data Privacy
  data_privacy:
    anonymize_data: true
    retention_period: 90  # days
    encryption_enabled: true

# Development Settings
development:
  # Debug Mode
  debug:
    enabled: false
    verbose_logging: false
    test_mode: false

  # Testing
  testing:
    unit_tests: true
    integration_tests: true
    e2e_tests: false
    coverage_threshold: 0.8

  # Development Environment
  environment:
    python_version: "3.9"
    node_version: "18"
    database: "sqlite"

  # Code Quality
  code_quality:
    linting: true
    formatting: true
    complexity_check: true
    security_scan: true

# Performance Settings
performance:
  # Resource Limits
  resources:
    max_memory: "2GB"
    max_cpu_time: 300  # seconds
    max_file_size: "10MB"

  # Caching
  caching:
    enabled: true
    cache_duration: 3600  # seconds
    cache_size: "100MB"

  # Concurrency
  concurrency:
    max_workers: 4
    queue_size: 100
    timeout: 600  # seconds

# Experimental Features
experimental:
  # Machine Learning
  ml_features:
    enabled: false
    model_training: false
    predictive_analysis: false

  # Advanced Analytics
  analytics:
    enabled: false
    trend_analysis: false
    correlation_analysis: false

  # Natural Language Processing
  nlp:
    enabled: false
    sentiment_analysis: false
    text_summarization: false

# Environment Specific Settings
environments:
  development:
    debug: true
    auto_fix: false
    create_issues: false

  staging:
    debug: false
    auto_fix: true
    create_issues: true

  production:
    debug: false
    auto_fix: false
    create_issues: true
    require_approval: true